
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "DEF DS ER GRM IG LEX LFUNC LTRG LTS PA PCA PCF PF PRA PRCD PREC PRF RT TKS TVAL TYPE YACC YFUNCS aspval cod id name nt pelval rgx symbolPly : Lexer YcLexer : LEX Literals Ignore Tokens Lfuncs LerrorYc : YACC Precedents Declarations Grammar YfsGrammar : GRM ProductionsYfs : YFUNCS FuncsLiterals : LTS '=' aspvalLiterals : Ignore : IG '=' aspvalIgnore : Tokens : TKS '=' PRA Tokl PRFTokl : Tokl ',' pelvalTokl : pelvalLfuncs : Lfuncs LfuncLfuncs : Lfunc : LFUNC rgx DS RT PA pelval ',' Tv PF Tv : TVALTv : TYPE PA TVAL PFLerror : ER Codes PFLerror : Precedents : PRCD '=' PRA Prcdlist PRFDeclarations : Declarations DeclarationDeclarations : Declaration : id '=' PProductions : Productions ProductionProductions : Production : nt DS Symbols PCA Codes PCFSymbols : Symbols SSymbols : S : symbolS : PREC symbolP : PRA PRFP : PCA PCFPrcdlist : Prcdlist PA LTRG ',' Pelvals pelval PF ','Prcdlist : Pelvals : Pelvals pelval ','Pelvals : Funcs : Funcs FuncFuncs : Func : DEF name PA name PF PCA Codes PCFCodes : Codes CodeCodes : Code : codCode : PA Codes PFCode : PRA Codes PRFCode : PCA Codes PCF"
    
_lr_action_items = {'LEX':([0,],[3,]),'$end':([1,4,27,28,37,49,100,],[0,-1,-3,-38,-5,-37,-39,]),'YACC':([2,15,24,32,33,55,62,98,],[5,-14,-19,-2,-13,-18,-10,-15,]),'LTS':([3,],[7,]),'IG':([3,6,18,],[-7,11,-6,]),'TKS':([3,6,10,18,26,],[-7,-9,16,-6,-8,]),'PRCD':([5,],[9,]),'=':([7,9,11,16,22,],[12,14,17,25,30,]),'GRM':([8,13,20,40,43,52,53,],[-22,21,-21,-23,-20,-31,-32,]),'id':([8,13,20,40,43,52,53,],[-22,22,-21,-23,-20,-31,-32,]),'aspval':([12,17,],[18,26,]),'PRA':([14,25,30,34,45,56,57,58,59,60,67,68,69,73,78,79,80,83,92,97,],[23,36,41,-41,59,-40,-42,-41,-41,-41,59,59,59,-41,-43,-44,-45,59,-41,59,]),'ER':([15,24,33,62,98,],[-14,34,-13,-10,-15,]),'LFUNC':([15,24,33,62,98,],[-14,35,-13,-10,-15,]),'YFUNCS':([19,21,29,38,88,],[28,-25,-4,-24,-26,]),'nt':([21,29,38,88,],[-25,39,-24,-26,]),'PRF':([23,31,41,47,48,56,57,59,68,71,78,79,80,93,],[-34,43,52,62,-12,-40,-42,-41,79,-11,-43,-44,-45,-33,]),'PA':([23,31,34,45,56,57,58,59,60,64,67,68,69,70,73,78,79,80,83,92,93,96,97,],[-34,44,-41,58,-40,-42,-41,-41,-41,72,58,58,58,81,-41,-43,-44,-45,58,-41,-33,99,58,]),'DEF':([28,37,49,100,],[-38,50,-37,-39,]),'PCA':([30,34,45,51,56,57,58,59,60,65,67,68,69,73,74,75,78,79,80,83,84,87,92,97,],[42,-41,60,-28,-40,-42,-41,-41,-41,73,60,60,60,-41,-27,-29,-43,-44,-45,60,-30,92,-41,60,]),'PF':([34,45,56,57,58,67,78,79,80,82,85,94,95,101,102,],[-41,55,-40,-42,-41,78,-43,-44,-45,87,90,98,-16,102,-17,]),'cod':([34,45,56,57,58,59,60,67,68,69,73,78,79,80,83,92,97,],[-41,57,-40,-42,-41,-41,-41,57,57,57,-41,-43,-44,-45,57,-41,57,]),'rgx':([35,],[46,]),'pelval':([36,63,66,77,81,89,],[48,71,-36,85,86,-35,]),'DS':([39,46,],[51,61,]),'PCF':([42,56,57,60,69,73,78,79,80,83,92,97,],[53,-40,-42,-41,80,-41,-43,-44,-45,88,-41,100,]),'LTRG':([44,],[54,]),',':([47,48,54,71,85,86,90,],[63,-12,66,-11,89,91,93,]),'name':([50,72,],[64,82,]),'symbol':([51,65,74,75,76,84,],[-28,75,-27,-29,84,-30,]),'PREC':([51,65,74,75,84,],[-28,76,-27,-29,-30,]),'RT':([61,],[70,]),'TVAL':([91,99,],[95,101,]),'TYPE':([91,],[96,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Ply':([0,],[1,]),'Lexer':([0,],[2,]),'Yc':([2,],[4,]),'Literals':([3,],[6,]),'Precedents':([5,],[8,]),'Ignore':([6,],[10,]),'Declarations':([8,],[13,]),'Tokens':([10,],[15,]),'Grammar':([13,],[19,]),'Declaration':([13,],[20,]),'Lfuncs':([15,],[24,]),'Yfs':([19,],[27,]),'Productions':([21,],[29,]),'Prcdlist':([23,],[31,]),'Lerror':([24,],[32,]),'Lfunc':([24,],[33,]),'Funcs':([28,],[37,]),'Production':([29,],[38,]),'P':([30,],[40,]),'Codes':([34,58,59,60,73,92,],[45,67,68,69,83,97,]),'Tokl':([36,],[47,]),'Func':([37,],[49,]),'Code':([45,67,68,69,83,97,],[56,56,56,56,56,56,]),'Symbols':([51,],[65,]),'S':([65,],[74,]),'Pelvals':([66,],[77,]),'Tv':([91,],[94,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Ply","S'",1,None,None,None),
  ('Ply -> Lexer Yc','Ply',2,'p_Ply','plysimple_sin.py',6),
  ('Lexer -> LEX Literals Ignore Tokens Lfuncs Lerror','Lexer',6,'p_Lexer','plysimple_sin.py',10),
  ('Yc -> YACC Precedents Declarations Grammar Yfs','Yc',5,'p_Yc','plysimple_sin.py',14),
  ('Grammar -> GRM Productions','Grammar',2,'p_Grammar','plysimple_sin.py',18),
  ('Yfs -> YFUNCS Funcs','Yfs',2,'p_Yfs','plysimple_sin.py',22),
  ('Literals -> LTS = aspval','Literals',3,'p_Literals','plysimple_sin.py',26),
  ('Literals -> <empty>','Literals',0,'p_Literals_empty','plysimple_sin.py',32),
  ('Ignore -> IG = aspval','Ignore',3,'p_Ignore','plysimple_sin.py',36),
  ('Ignore -> <empty>','Ignore',0,'p_Ignore_empty','plysimple_sin.py',40),
  ('Tokens -> TKS = PRA Tokl PRF','Tokens',5,'p_Tokens','plysimple_sin.py',44),
  ('Tokl -> Tokl , pelval','Tokl',3,'p_Tokl','plysimple_sin.py',48),
  ('Tokl -> pelval','Tokl',1,'p_Tokl_single','plysimple_sin.py',52),
  ('Lfuncs -> Lfuncs Lfunc','Lfuncs',2,'p_Lfuncs','plysimple_sin.py',56),
  ('Lfuncs -> <empty>','Lfuncs',0,'p_Lfuncs_empty','plysimple_sin.py',60),
  ('Lfunc -> LFUNC rgx DS RT PA pelval , Tv PF','Lfunc',9,'p_Lfunc','plysimple_sin.py',64),
  ('Tv -> TVAL','Tv',1,'p_Tv','plysimple_sin.py',69),
  ('Tv -> TYPE PA TVAL PF','Tv',4,'p_Tv_type','plysimple_sin.py',73),
  ('Lerror -> ER Codes PF','Lerror',3,'p_Lerror','plysimple_sin.py',77),
  ('Lerror -> <empty>','Lerror',0,'p_Lerror_empty','plysimple_sin.py',81),
  ('Precedents -> PRCD = PRA Prcdlist PRF','Precedents',5,'p_Precedents','plysimple_sin.py',85),
  ('Declarations -> Declarations Declaration','Declarations',2,'p_Declarations','plysimple_sin.py',89),
  ('Declarations -> <empty>','Declarations',0,'p_Declarations_empty','plysimple_sin.py',93),
  ('Declaration -> id = P','Declaration',3,'p_Declaration','plysimple_sin.py',97),
  ('Productions -> Productions Production','Productions',2,'p_Productions','plysimple_sin.py',101),
  ('Productions -> <empty>','Productions',0,'p_Productions_empty','plysimple_sin.py',105),
  ('Production -> nt DS Symbols PCA Codes PCF','Production',6,'p_Production','plysimple_sin.py',109),
  ('Symbols -> Symbols S','Symbols',2,'p_Symbols','plysimple_sin.py',113),
  ('Symbols -> <empty>','Symbols',0,'p_Symbols_empty','plysimple_sin.py',117),
  ('S -> symbol','S',1,'p_S','plysimple_sin.py',121),
  ('S -> PREC symbol','S',2,'p_S_Prec','plysimple_sin.py',125),
  ('P -> PRA PRF','P',2,'p_P_pr','plysimple_sin.py',129),
  ('P -> PCA PCF','P',2,'p_P_pc','plysimple_sin.py',133),
  ('Prcdlist -> Prcdlist PA LTRG , Pelvals pelval PF ,','Prcdlist',8,'p_Prcdlist','plysimple_sin.py',137),
  ('Prcdlist -> <empty>','Prcdlist',0,'p_Prcdlist_empty','plysimple_sin.py',141),
  ('Pelvals -> Pelvals pelval ,','Pelvals',3,'p_Pelvals','plysimple_sin.py',145),
  ('Pelvals -> <empty>','Pelvals',0,'p_Pelvals_empty','plysimple_sin.py',149),
  ('Funcs -> Funcs Func','Funcs',2,'p_Funcs','plysimple_sin.py',153),
  ('Funcs -> <empty>','Funcs',0,'p_Funcs_empty','plysimple_sin.py',157),
  ('Func -> DEF name PA name PF PCA Codes PCF','Func',8,'p_Func','plysimple_sin.py',161),
  ('Codes -> Codes Code','Codes',2,'p_Codes','plysimple_sin.py',165),
  ('Codes -> <empty>','Codes',0,'p_Codes_empty','plysimple_sin.py',169),
  ('Code -> cod','Code',1,'p_Code','plysimple_sin.py',173),
  ('Code -> PA Codes PF','Code',3,'p_Code_p','plysimple_sin.py',177),
  ('Code -> PRA Codes PRF','Code',3,'p_Code_pr','plysimple_sin.py',181),
  ('Code -> PCA Codes PCF','Code',3,'p_Code_pc','plysimple_sin.py',185),
]
