
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "DEC DEF DOTS ER FUNC ID IG L LEFT LFUNC LT LX NT PA PCA PCF PF PREC PRECEDENT RGX RIGHT RT T TK TVALUE TYPE YC arg aspval cod grammar pelval str yfuncsPly : LexLex : LX Literals Ignore Tokens LfuncsLiterals : LT '=' aspvalLiterals : Ignore : IG '=' aspvalIgnore : Tokens : TK '=' '[' Tokl ']'Tokl : Tokl ',' pelvalTokl : pelvalLfuncs : Lfuncs LfuncLfuncs : Lfunc : LFUNC RGX DOTS RT PA pelval ',' TVALUE PF Lfunc : LFUNC RGX DOTS RT PA pelval ',' TYPE PA TVALUE PF PFLfunc : LFUNC RGX DOTS ER PF "
    
_lr_action_items = {'LX':([0,],[3,]),'$end':([1,2,9,13,16,23,29,34,38,],[0,-1,-11,-2,-10,-7,-14,-12,-13,]),'LT':([3,],[5,]),'IG':([3,4,12,],[-4,7,-3,]),'TK':([3,4,6,12,15,],[-4,-6,10,-3,-5,]),'=':([5,7,10,],[8,11,14,]),'aspval':([8,11,],[12,15,]),'LFUNC':([9,13,16,23,29,34,38,],[-11,17,-10,-7,-14,-12,-13,]),'[':([14,],[18,]),'RGX':([17,],[19,]),'pelval':([18,24,28,],[21,27,30,]),'DOTS':([19,],[22,]),']':([20,21,27,],[23,-9,-8,]),',':([20,21,27,30,],[24,-9,-8,31,]),'RT':([22,],[25,]),'ER':([22,],[26,]),'PA':([25,33,],[28,35,]),'PF':([26,32,36,37,],[29,34,37,38,]),'TVALUE':([31,35,],[32,36,]),'TYPE':([31,],[33,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Ply':([0,],[1,]),'Lex':([0,],[2,]),'Literals':([3,],[4,]),'Ignore':([4,],[6,]),'Tokens':([6,],[9,]),'Lfuncs':([9,],[13,]),'Lfunc':([13,],[16,]),'Tokl':([18,],[20,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Ply","S'",1,None,None,None),
  ('Ply -> Lex','Ply',1,'p_Ply','plysimple_sin.py',5),
  ('Lex -> LX Literals Ignore Tokens Lfuncs','Lex',5,'p_Lex','plysimple_sin.py',9),
  ('Literals -> LT = aspval','Literals',3,'p_Literals','plysimple_sin.py',13),
  ('Literals -> <empty>','Literals',0,'p_Literals_empty','plysimple_sin.py',17),
  ('Ignore -> IG = aspval','Ignore',3,'p_Ignore','plysimple_sin.py',20),
  ('Ignore -> <empty>','Ignore',0,'p_Ignore_empty','plysimple_sin.py',24),
  ('Tokens -> TK = [ Tokl ]','Tokens',5,'p_Tokens','plysimple_sin.py',27),
  ('Tokl -> Tokl , pelval','Tokl',3,'p_Tokl','plysimple_sin.py',31),
  ('Tokl -> pelval','Tokl',1,'p_Tokl_single','plysimple_sin.py',35),
  ('Lfuncs -> Lfuncs Lfunc','Lfuncs',2,'p_Lfuncs','plysimple_sin.py',39),
  ('Lfuncs -> <empty>','Lfuncs',0,'p_Lfuncs_empty','plysimple_sin.py',43),
  ('Lfunc -> LFUNC RGX DOTS RT PA pelval , TVALUE PF','Lfunc',9,'p_Lfunc','plysimple_sin.py',47),
  ('Lfunc -> LFUNC RGX DOTS RT PA pelval , TYPE PA TVALUE PF PF','Lfunc',12,'p_Lfunc_type','plysimple_sin.py',51),
  ('Lfunc -> LFUNC RGX DOTS ER PF','Lfunc',5,'p_Lfunc_error','plysimple_sin.py',55),
]
